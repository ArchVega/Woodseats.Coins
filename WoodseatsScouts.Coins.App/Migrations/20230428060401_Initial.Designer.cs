// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WoodseatsScouts.Coins.App.Data;

#nullable disable

namespace WoodseatsScouts.Coins.App.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230428060401_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WoodseatsScouts.Coins.App.Models.Domain.ErrorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("LoggedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.App.Models.Domain.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Clue1State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clue2State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clue3State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("'M' + (FORMAT(TroopId, '000'))  + [Section] + (FORMAT(Number, '000'))");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasImage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDayVisitor")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TroopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TroopId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "M013B001",
                            FirstName = "Conner",
                            HasImage = true,
                            IsDayVisitor = false,
                            LastName = "Gillespie",
                            Number = 1,
                            Section = "B",
                            TroopId = 999
                        },
                        new
                        {
                            Id = 2,
                            Code = "M014B002",
                            FirstName = "Orlando",
                            HasImage = true,
                            IsDayVisitor = false,
                            LastName = "Mendez",
                            Number = 2,
                            Section = "B",
                            TroopId = 999
                        },
                        new
                        {
                            Id = 3,
                            Code = "M015B003",
                            FirstName = "Calvin",
                            HasImage = true,
                            IsDayVisitor = false,
                            LastName = "Fields",
                            Number = 3,
                            Section = "B",
                            TroopId = 999
                        },
                        new
                        {
                            Id = 4,
                            Code = "M016C004",
                            FirstName = "Dillon",
                            HasImage = true,
                            IsDayVisitor = true,
                            LastName = "Durham",
                            Number = 4,
                            Section = "C",
                            TroopId = 74
                        },
                        new
                        {
                            Id = 5,
                            Code = "M017C005",
                            FirstName = "Josiah",
                            HasImage = true,
                            IsDayVisitor = true,
                            LastName = "Castaneda",
                            Number = 5,
                            Section = "C",
                            TroopId = 74
                        });
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.App.Models.Domain.ScavengedCoin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BaseNumber")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PointValue")
                        .HasColumnType("int");

                    b.Property<int>("ScavengeResultId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScavengeResultId");

                    b.ToTable("ScavengedCoins");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.App.Models.Domain.ScavengeResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("ScavengeResults");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.App.Models.Domain.Troop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Troops");

                    b.HasData(
                        new
                        {
                            Id = 280,
                            Name = "Norton"
                        },
                        new
                        {
                            Id = 999,
                            Name = "Woodseats Explorers"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Oak Street"
                        });
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.App.Models.Domain.Member", b =>
                {
                    b.HasOne("WoodseatsScouts.Coins.App.Models.Domain.Troop", "Troop")
                        .WithMany("Members")
                        .HasForeignKey("TroopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Troop");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.App.Models.Domain.ScavengedCoin", b =>
                {
                    b.HasOne("WoodseatsScouts.Coins.App.Models.Domain.ScavengeResult", "ScavengeResult")
                        .WithMany("ScavengedCoins")
                        .HasForeignKey("ScavengeResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScavengeResult");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.App.Models.Domain.ScavengeResult", b =>
                {
                    b.HasOne("WoodseatsScouts.Coins.App.Models.Domain.Member", "Member")
                        .WithMany("ScavengeResults")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.App.Models.Domain.Member", b =>
                {
                    b.Navigation("ScavengeResults");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.App.Models.Domain.ScavengeResult", b =>
                {
                    b.Navigation("ScavengedCoins");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.App.Models.Domain.Troop", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
